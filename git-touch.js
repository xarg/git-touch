// Generated by CoffeeScript 1.3.1
(function() {
  var fill;

  fill = {
    stroke: "#fff",
    fill: "#fff",
    "fill-opacity": .5,
    "stroke-width": 2,
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  };

  $(document).onresize = function() {
    var r;
    return r = Raphael("holder").setSize(window.innerWidth, window.innerHeight);
  };

  $(document).ready(function() {
    var center_h, center_w, commits, conn_commits, connections, drawConnections, hover_in, hover_out, parseTree, r, shape_size, spacing;
    r = Raphael("holder");
    conn_commits = [];
    connections = [];
    shape_size = 10;
    center_h = Math.ceil(window.innerHeight / 2);
    center_w = Math.ceil(window.innerWidth / 2);
    commits = {};
    $.getJSON(GIT_TOUCH_BASE_URL + "commits", function(commit) {
      parseTree(commit);
      return drawConnections();
    });
    spacing = 0;
    parseTree = function(commit) {
      var color, commit_parent, i, r_commit, _results;
      color = Raphael.getColor();
      r_commit = r.circle(center_w, center_h + spacing, shape_size).attr(fill).attr({
        fill: color,
        stroke: color
      }).data("commit", commit);
      spacing += 30;
      commits[commit.commit] = r_commit;
      _results = [];
      for (i in commit.parents) {
        commit_parent = commit.parents[i];
        conn_commits.push([commit.commit, commit_parent.commit]);
        _results.push(parseTree(commit_parent));
      }
      return _results;
    };
    drawConnections = function() {
      var i, r_commit, r_conn, r_parent, _results;
      _results = [];
      for (i in conn_commits) {
        r_commit = commits[conn_commits[i][0]];
        r_parent = commits[conn_commits[i][1]];
        r_conn = r.connection(r_commit, r_parent, "#fff");
        _results.push(connections.push(r_conn));
      }
      return _results;
    };
    hover_in = function(e) {
      var rect;
      rect = r.rect(e.x + 20, e.y + 20, 100, 75, 10).attr({
        text: "Hdsadas"
      });
      return this.data("tooltip", rect.id);
    };
    return hover_out = function(e) {
      return r.getById(this.data("tooltip")).remove();
    };
  });

}).call(this);
